#!/bin/bash
set -e

if [ -z "$BAHMNI_PROFILE" ]; then
	export BAHMNI_PROFILE=mrs
    echo "BAHMNI_PROFILE not set, using 'mrs' as default option.  The possible values are all,mrs,mrs-elis,mrs-erp,mrs-demo,prod"
fi
export COMPOSE=$PWD/profiles/${BAHMNI_PROFILE}.yml

function start_pgsql(){
	if [[ "$BAHMNI_PROFILE" == "mrs-erp" || "$BAHMNI_PROFILE" == "mrs-elis" || "$BAHMNI_PROFILE" == "prod" || "$BAHMNI_PROFILE" == "all" ]]; then 
		echo "Starting pgsql"
		docker-compose -f $COMPOSE up -d pgsql
	fi
}

function get_container_name(){
	echo $(docker ps | tr ' ' '\n' | grep "profiles_$1")
}

case "$1" in
	"install" )
		echo -e "Setting up for the first time.  Starting mysql ..."
		docker-compose -f $COMPOSE up -d mysql
		start_pgsql
		echo -e "Waiting for databases to startup"
		sleep 30
		echo -e "Starting other containers now"
		docker-compose -f $COMPOSE up -d --no-recreate 
		;;
	"start" )
		echo -e "Starting the containers"
		docker-compose -f $COMPOSE start
		;;
	"stop" )
		echo -e "Stopping the containers"
		docker-compose -f $COMPOSE stop
		;;
	"status" )
		docker-compose -f $COMPOSE ps
		;;
	"restart" )
		echo -e "Restarting..."
		docker-compose -f $COMPOSE restart web apache
		;;				
	"clean" )
		docker-compose -f $COMPOSE rm -v --force
		;;
	"logs" )
		docker logs -f $(get_container_name "$2")
		;;
	"process" )
		docker ps
		;;
	"shell" )
		docker exec -it $(get_container_name "$2") /bin/bash
		;;
	* )
		echo -e "Invalid option $1"
		;;
esac
